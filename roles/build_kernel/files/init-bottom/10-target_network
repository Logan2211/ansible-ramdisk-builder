#!/bin/sh
# Copyright 2016, Logan Vig <logan2211@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

case $1 in
  prereqs)
    exit 0
    ;;
esac

for x in $cmdline; do
	case $x in
	dhcpints=*)
		dhcpints="${x#dhcpints=}"
		;;
	dummyints=*)
		dummyints="${x#dummyints=}"
		;;
	esac
done

#if the initrd set up any network interfaces, let's add them to the system network configuration.
for i in /run/net-*.conf; do
	base_file=$(basename "$i")
	#remove net-
	base_file=${base_file#*net-}
	#remove .conf extension
	ifname=${base_file%.*}

	cat >> /root/etc/systemd/network/"$ifname".network << EOF
[Match]
Name=${ifname}
[Network]
DHCP=ipv4
EOF
done

#add additional dhcp interfaces from "dhcpints" command line option
IFS=","
for ifname in $dhcpints; do
  cat >> /root/etc/systemd/network/"$ifname".network << EOF
[Match]
Name=${ifname}
[Network]
DHCP=ipv4
EOF
done

#set up dummy interfaces.
#this is defined on the cmdline like:
#dummyints=dummy1:x.x.x.x,dummy2:x.x.x.x
IFS=","
for x in $dummyints; do
	#x should be like bondX:eth0,eth1,eth2,eth3
	#in the case of a single interface, it could just be eth0,eth1,eth2 so we handle that too (ONERUN) and break out of the loops
	IFS=":"
	set -- $x
	case $2 in
	*[![:blank:]]*)
		IFNAME=$1
		IP=$2
		;;
	*)
		ONERUN=true
		IFNAME=dummy1
		IP=$1
		;;
	esac

	#add network configuration for this dummy interface
  cat >> /root/etc/network/interfaces.d/"${IFNAME}" << EOF
auto ${IFNAME}
iface ${IFNAME} inet static
  pre-up ip link add \$IFACE type dummy
  post-down ip link del \$IFACE
  post-up /opt/clusterboot/bin/bird-initial-config force
  address ${IP}
  netmask 255.255.255.255
  mtu 8900
EOF

	if [ "$ONERUN" = "true" ]; then
		break
	fi
done
